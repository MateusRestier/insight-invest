import schedule
import time
from datetime import date
from db_connection import get_connection

# importa o main do scraper
from scraper_indicadores import main as scraper_main

# importa a fun√ß√£o de previs√£o do regressor
from regressor_preco import executar_pipeline_regressor

# importa nossa fun√ß√£o paralela de recomenda√ß√£o em lote
from recomendador_acoes import recomendar_varias_acoes

# importa a fun√ß√£o de backup direto
from backup import criar_backup

def tarefa_diaria():
    print("üïë Iniciando rotina di√°ria")

    # 1) Executa o scraper (fun√ß√£o main)
    print("‚ñ∂Ô∏è Executando scraper_indicadores.main()")
    scraper_main()

    # 2) Executa o regressor como se fosse op√ß√£o ‚Äú1‚Äù (n_dias=10, data_calculo=hoje)
    n_dias = 10
    data_calculo = date.today()
    print(f"‚ñ∂Ô∏è Executando pipeline de regress√£o para {n_dias} dias a partir de {data_calculo}")
    executar_pipeline_regressor(n_dias=n_dias, data_calculo=data_calculo)

    # 3) Executa inser√ß√£o em lote das recomenda√ß√µes
    print("‚ñ∂Ô∏è Inserindo recomenda√ß√µes em lote no banco...")
    conn = get_connection()
    recomendar_varias_acoes(conn)

    # 4) Executa backup do banco (equivalente √† op√ß√£o 1)
    print("‚ñ∂Ô∏è Executando backup do banco...")
    criar_backup()

    print("‚úÖ Rotina di√°ria conclu√≠da\n")


# agenda para rodar todo dia √†s 01:00
schedule.every().day.at("01:00").do(tarefa_diaria)

print("‚è± Scheduler iniciado. Aguardando pr√≥xima execu√ß√£o...")
while True:
    schedule.run_pending()
    time.sleep(30)


'''if __name__ == "__main__":
    tarefa_diaria()'''